services:
  # PostgreSQL数据库
  postgres:
    image: postgres:15-alpine
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=iot
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - gateway-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  # NATS消息队列
  nats:
    image: nats:2.10-alpine
    container_name: nats
    ports:
      - "4222:4222"  # NATS protocol
      - "8222:8222"  # HTTP monitoring
      - "6222:6222"  # Routing port for clustering
    command: ["-js", "-m", "8222"]
    networks:
      - gateway-net
    healthcheck:
      test: ["CMD", "nats", "server", "check"]
      interval: 30s
      timeout: 10s
      retries: 3

  # EMQX MQTT代理
  emqx:
    image: emqx/emqx:5.4.1
    container_name: emqx
    ports:
      - "50005:1883"   # MQTT
      - "50006:8083"   # MQTT over WebSocket
      - "50007:8084"   # MQTT over WSS
      - "50008:8883"   # MQTT over SSL
      - "50004:18083" # Dashboard
    environment:
      - EMQX_NAME=emqx
      - EMQX_HOST=emqx
      - EMQX_DASHBOARD__DEFAULT_USERNAME=admin
      - EMQX_DASHBOARD__DEFAULT_PASSWORD=public
    volumes:
      - emqx-data:/opt/emqx/data
      - emqx-etc:/opt/emqx/etc
      - emqx-log:/opt/emqx/log
    networks:
      - gateway-net

  # Prometheus监控
  prometheus:
    image: prom/prometheus:v2.47.2
    container_name: prometheus
    ports:
      - "50003:9090"   # Prometheus Web UI
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    networks:
      - gateway-net

  # Grafana仪表板
  grafana:
    image: grafana/grafana:10.2.0
    container_name: grafana
    ports:
      - "50002:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana-data:/var/lib/grafana
      - ./docker/grafana/provisioning:/etc/grafana/provisioning
      - ./docker/grafana/dashboards:/var/lib/grafana/dashboards
    networks:
      - gateway-net

  # Edge Gateway主服务 - 开发调试时在控制台启动
  # edge-gateway:
  #   build: .
  #     - emqx
  #     - prometheus
  #   networks:
  #     - gateway-net

  # InfluxDB时序数据库(可选) - 3.2-core版本配置
  influxdb:
    image: influxdb:3.2-core
    container_name: influxdb
    ports:
      - "8086:8086"
    command: 
      - influxdb3
      - serve
      - --object-store
      - memory
      - --node-id
      - gateway-node-001
      - --log-filter
      - info
      - --without-auth
      - --http-bind
      - 0.0.0.0:8086
      - --disable-authz
      - health,ping,metrics
    environment:
      - INFLUXDB_HTTP_BIND_ADDRESS=0.0.0.0:8086
      - INFLUXDB_INIT_USERNAME=admin
      - INFLUXDB_INIT_PASSWORD=password123
      - INFLUXDB_INIT_ORG=edge-gateway
      - INFLUXDB_INIT_BUCKET=iot-data
      - INFLUXDB3_DISABLE_PYTHON_UDF=true
    volumes:
      - influxdb-data:/var/lib/influxdb3
      - influxdb-config:/etc/influxdb3
    networks:
      - gateway-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8086/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  postgres-data:
  emqx-data:
  emqx-etc:
  emqx-log:
  prometheus-data:
  grafana-data:
  influxdb-data:
  influxdb-config:

networks:
  gateway-net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16