# ===============================================
# 工控物联网边缘网关 - Git忽略配置
# Industrial IoT Edge Gateway - .gitignore
# ===============================================

# =================== RUST 相关 ===================
# Rust编译产物和缓存
target/
debug/

# Cargo.lock策略：
# - 根目录保留（binary crate）
# - 子crate忽略（library crate）
**/*/Cargo.lock
!Cargo.lock

# Rust备份和临时文件
**/*.rs.bk
**/*.orig

# MSVC调试信息
*.pdb

# 测试覆盖率报告
tarpaulin-report.html
cobertura.xml
lcov.info

# Cargo变异测试
**/mutants.out*/

# ============== NODE.JS / NPM 相关 ===============
# 依赖包目录
node_modules/
npm-debug.log*
npm-error.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*

# 运行时数据
pids
*.pid
*.seed
*.pid.lock

# 覆盖率目录
lib-cov
coverage/
*.lcov
.nyc_output

# 构建工具临时文件
.grunt
bower_components

# ============= FRONTEND / VUE.JS 相关 =============
# 构建输出目录
dist/
dist-ssr/
build/

# Vite缓存
.vite/
.cache/

# Vue自动生成文件
auto-imports.d.ts
components.d.ts

# Nuxt构建目录
.nuxt/
.output/

# ================ 日志和数据文件 ==================
# 应用日志
*.log
logs/
backend.log
frontend.log

# 数据库和持久化数据
data/
wal/
*.db
*.sqlite
*.sqlite3

# 备份文件
*.backup
*.bak

# =============== IDE和编辑器相关 ==================
# JetBrains IDEs
.idea/
*.iws
*.iml
*.ipr

# Visual Studio Code
.vscode/
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json

# Vim
[._]*.s[a-v][a-z]
[._]*.sw[a-p]
[._]s[a-rt-v][a-z]
[._]ss[a-gi-z]
[._]sw[a-p]

# Emacs
*~
\#*\#
.\#*

# ================== 系统文件 =====================
# macOS
.DS_Store
.AppleDouble
.LSOverride
Icon
._*

# Windows
Thumbs.db
Thumbs.db:encryptable
ehthumbs.db
ehthumbs_vista.db
Desktop.ini
$RECYCLE.BIN/
*.cab
*.msi
*.msix
*.msm
*.msp
*.lnk

# Linux
*~
.fuse_hidden*
.directory
.Trash-*
.nfs*

# ============== 临时和系统特殊文件 ================
# Windows空设备文件
nul

# 临时文件
*.tmp
*.temp
*.swp
*.swo
*~

# ================ 配置和环境文件 ===================
# 环境变量文件
.env
.env.local
.env.*.local
.env.development.local
.env.test.local
.env.production.local

# 本地配置文件
*local.yml
*local.yaml
*local.json
*.local.toml

# ================= Docker相关 ====================
# Docker构建缓存
.dockerignore.bak

# ============== 测试和性能分析文件 ================
# 测试报告
test-results/
junit.xml

# 性能分析文件
*.prof
flamegraph.svg
perf.data*

# ================ 文档和状态文件 ==================
# 临时状态文档（根据需要调整）
*_STATUS.md
*_FIX_*.md
EMERGENCY_*.md
*_DEBUG_*.md

# API文档生成
doc/

# ================= 其它构建产物 ===================
# 压缩文件
*.zip
*.tar.gz
*.rar
*.7z

# 可执行文件
*.exe
*.dll
*.so
*.dylib

# ================ 项目特定忽略 =====================
# 脚本输出
*.ps1.log
*.bat.log

# 健康检查和测试脚本输出
health_check_*.log
test_output_*.txt

# 模拟API数据
mock_data/

# 临时构建脚本
build_temp.*
deploy_temp.*
